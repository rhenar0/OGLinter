plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "oglinter" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

repositories {
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "io.github.cottonmc:LibGui:14.0.0+1.21.6"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'org.languagetool:language-fr:5.9'

    include 'org.languagetool:language-fr:5.9'

    include 'org.languagetool:french-pos-dict:0.5'
    include 'org.languagetool:languagetool-core:5.9'
    include 'com.carrotsearch:hppc:0.8.2'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.13.2'
    include 'com.fasterxml.jackson.core:jackson-core:2.13.2'
    include 'com.fasterxml.jackson.core:jackson-databind:2.13.2.1'
    include 'com.gitlab.dumonts:hunspell:1.1.1'
    include 'com.google.android.tools:dx:1.7'
    include 'com.google.android:annotations:4.1.1.4'
    include 'com.google.api.grpc:proto-google-common-protos:2.9.0'
    include 'com.google.code.findbugs:jsr305:3.0.2'
    include 'com.google.code.gson:gson:2.9.0'
    include 'com.google.errorprone:error_prone_annotations:2.3.4'
    include 'com.google.j2objc:j2objc-annotations:1.3'
    include 'com.google.protobuf:protobuf-java:3.21.1'
    include 'com.hankcs:aho-corasick-double-array-trie:1.2.2'
    include 'com.intellij:annotations:12.0'
    include 'com.nativelibs4java:bridj:0.7.0'
    include 'com.optimaize.languagedetector:language-detector:0.6'
    include 'com.sun.istack:istack-commons-runtime:3.0.5'
    include 'com.sun.xml.fastinfoset:FastInfoset:1.2.13'
    include 'com.vdurmont:emoji-java:5.1.1'
    include 'commons-beanutils:commons-beanutils:1.9.4'
    include 'commons-digester:commons-digester:2.1'
    include 'commons-logging:commons-logging:1.2'
    include 'commons-validator:commons-validator:1.7'
    include 'io.github.resilience4j:resilience4j-circuitbreaker:1.7.1'
    include 'io.github.resilience4j:resilience4j-core:1.7.1'
    include 'io.github.resilience4j:resilience4j-micrometer:1.7.1'
    include 'io.grpc:grpc-api:1.48.1'
    include 'io.grpc:grpc-context:1.48.1'
    include 'io.grpc:grpc-core:1.48.1'
    include 'io.grpc:grpc-netty-shaded:1.48.1'
    include 'io.grpc:grpc-protobuf:1.48.1'
    include 'io.grpc:grpc-protobuf-lite:1.48.1'
    include 'io.grpc:grpc-stub:1.48.1'
    include 'io.micrometer:micrometer-core:1.7.1'
    include 'io.micrometer:micrometer-registry-prometheus:1.7.1'
    include 'io.perfmark:perfmark-api:0.25.0'
    include 'io.prometheus:simpleclient:0.12.0'
    include 'io.prometheus:simpleclient_common:0.10.0'
    include 'io.prometheus:simpleclient_guava:0.12.0'
    include 'io.prometheus:simpleclient_tracer_common:0.12.0'
    include 'io.prometheus:simpleclient_tracer_otel:0.12.0'
    include 'io.prometheus:simpleclient_tracer_otel_agent:0.12.0'
    include 'io.vavr:vavr:0.10.2'
    include 'io.vavr:vavr-match:0.10.2'
    include 'javax.activation:javax.activation-api:1.2.0'
    include 'javax.annotation:javax.annotation-api:1.3.2'
    include 'javax.measure:unit-api:1.0'
    include 'javax.xml.bind:jaxb-api:2.3.0'
    include 'net.arnx:jsonic:1.2.11'
    include 'net.loomchild:segment:2.0.1'
    include 'org.apache.commons:commons-lang3:3.12.0'
    include 'org.apache.commons:commons-pool2:2.11.1'
    include 'org.apache.commons:commons-text:1.9'
    include 'org.apache.lucene:lucene-backward-codecs:5.5.5'
    include 'org.apache.lucene:lucene-core:5.5.5'
    include 'org.carrot2:morfologik-fsa:2.1.9'
    include 'org.carrot2:morfologik-fsa-builders:2.1.9'
    include 'org.carrot2:morfologik-speller:2.1.9'
    include 'org.carrot2:morfologik-stemming:2.1.9'
    include 'org.checkerframework:checker-qual:3.5.0'
    include 'org.glassfish.jaxb:jaxb-core:2.3.0'
    include 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
    include 'org.glassfish.jaxb:txw2:2.3.0'
    include 'org.hdrhistogram:HdrHistogram:2.1.12'
    include 'org.jetbrains.intellij.deps:trove4j:1.0.20200330'
    include 'org.jetbrains:annotations:20.1.0'
    include 'org.json:json:20200518'
    include 'org.jvnet.staxex:stax-ex:1.7.8'
    include 'org.latencyutils:LatencyUtils:2.0.3'
    include 'org.slf4j:slf4j-api:1.7.30'
    include 'tech.units:indriya:1.3'
    include 'tech.uom.lib:uom-lib-common:1.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
